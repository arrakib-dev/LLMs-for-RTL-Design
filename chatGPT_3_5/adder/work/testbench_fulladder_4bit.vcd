$date
  Tue Nov 28 19:35:07 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module testbench_fulladder_4bit $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 1 # cin $end
$var reg 4 $ s[3:0] $end
$var reg 1 % cout $end
$scope module uut $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( cin $end
$var reg 4 ) s[3:0] $end
$var reg 1 * cout $end
$var reg 1 + c1 $end
$var reg 1 , c2 $end
$var reg 1 - c3 $end
$scope module fa1 $end
$var reg 1 . a $end
$var reg 1 / b $end
$var reg 1 0 cin $end
$var reg 1 1 s $end
$var reg 1 2 cout $end
$var reg 1 3 p $end
$var reg 1 4 g $end
$upscope $end
$scope module fa2 $end
$var reg 1 5 a $end
$var reg 1 6 b $end
$var reg 1 7 cin $end
$var reg 1 8 s $end
$var reg 1 9 cout $end
$var reg 1 : p $end
$var reg 1 ; g $end
$upscope $end
$scope module fa3 $end
$var reg 1 < a $end
$var reg 1 = b $end
$var reg 1 > cin $end
$var reg 1 ? s $end
$var reg 1 @ cout $end
$var reg 1 A p $end
$var reg 1 B g $end
$upscope $end
$scope module fa8 $end
$var reg 1 C a $end
$var reg 1 D b $end
$var reg 1 E cin $end
$var reg 1 F s $end
$var reg 1 G cout $end
$var reg 1 H p $end
$var reg 1 I g $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
0#
b0000 $
0%
b0000 &
b0000 '
0(
b0000 )
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
#10000000
b0101 !
b1010 "
b1111 $
b0101 &
b1010 '
b1111 )
1.
11
13
16
18
1:
1<
1?
1A
1D
1F
1H
#20000000
b1111 !
b0001 "
1#
b0001 $
1%
b1111 &
b0001 '
1(
b0001 )
1*
1+
1,
1-
1/
10
11
12
03
14
15
06
17
08
19
1>
0?
1@
1C
0D
1E
0F
1G
#30000000
