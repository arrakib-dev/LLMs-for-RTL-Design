$date
  Wed Nov 29 20:52:40 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module multiplier4bit_tb $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 8 # s[7:0] $end
$scope module uut $end
$var reg 4 $ a[3:0] $end
$var reg 4 % b[3:0] $end
$var reg 8 & s[7:0] $end
$var reg 4 ' ab0[3:0] $end
$var reg 4 ( ab1[3:0] $end
$var reg 4 ) ab2[3:0] $end
$var reg 4 * ab3[3:0] $end
$var reg 4 + c1[3:0] $end
$var reg 4 , c2[3:0] $end
$var reg 4 - c3[3:0] $end
$var reg 4 . p1[3:0] $end
$var reg 4 / p2[3:0] $end
$var reg 4 0 p3[3:0] $end
$scope module fa1 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 cin $end
$var reg 1 4 cout $end
$var reg 1 5 s $end
$upscope $end
$scope module fa2 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 cin $end
$var reg 1 9 cout $end
$var reg 1 : s $end
$upscope $end
$scope module fa3 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = cin $end
$var reg 1 > cout $end
$var reg 1 ? s $end
$upscope $end
$scope module fa4 $end
$var reg 1 @ a $end
$var reg 1 A b $end
$var reg 1 B cin $end
$var reg 1 C cout $end
$var reg 1 D s $end
$upscope $end
$scope module fa5 $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G cin $end
$var reg 1 H cout $end
$var reg 1 I s $end
$upscope $end
$scope module fa6 $end
$var reg 1 J a $end
$var reg 1 K b $end
$var reg 1 L cin $end
$var reg 1 M cout $end
$var reg 1 N s $end
$upscope $end
$scope module fa7 $end
$var reg 1 O a $end
$var reg 1 P b $end
$var reg 1 Q cin $end
$var reg 1 R cout $end
$var reg 1 S s $end
$upscope $end
$scope module fa8 $end
$var reg 1 T a $end
$var reg 1 U b $end
$var reg 1 V cin $end
$var reg 1 W cout $end
$var reg 1 X s $end
$upscope $end
$scope module ha1 $end
$var reg 1 Y a $end
$var reg 1 Z b $end
$var reg 1 [ cout $end
$var reg 1 \ s $end
$upscope $end
$scope module ha2 $end
$var reg 1 ] a $end
$var reg 1 ^ b $end
$var reg 1 _ cout $end
$var reg 1 ` s $end
$upscope $end
$scope module ha3 $end
$var reg 1 a a $end
$var reg 1 b b $end
$var reg 1 c cout $end
$var reg 1 d s $end
$upscope $end
$scope module ha4 $end
$var reg 1 e a $end
$var reg 1 f b $end
$var reg 1 g cout $end
$var reg 1 h s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0110 !
b1100 "
b01001000 #
b0110 $
b1100 %
b01001000 &
b0000 '
b0000 (
b0110 )
b0110 *
b0000 +
b0000 ,
b0110 -
b0000 .
b0110 /
b1001 0
01
02
03
04
05
06
07
08
09
0:
0;
1<
0=
0>
1?
0@
1A
0B
0C
1D
0E
0F
0G
0H
0I
1J
1K
0L
1M
0N
0O
1P
1Q
1R
0S
0T
0U
1V
0W
1X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
1e
0f
0g
1h
#2000000
b0010 !
b0001 "
b00000010 #
b0010 $
b0001 %
b00000010 &
b0010 '
b0000 )
b0000 *
b0000 -
b0001 .
b0000 /
b0000 0
0<
0?
0A
0D
0J
0K
0M
0N
0P
0Q
0R
0S
0V
0X
1Y
1\
0e
0h
#4000000
b0111 !
b0101 "
b00100011 #
b0111 $
b0101 %
b00100011 &
b0111 '
b0111 )
b0111 ,
b0011 .
b1000 /
b0100 0
11
15
1<
1=
1>
0?
1A
1B
1C
0D
1G
1I
0J
0N
1O
1S
1a
1b
1c
0d
0e
0h
#6000000
b0100 !
b1101 "
b00110100 #
b0100 $
b1101 %
b00110100 &
b0100 '
b0100 )
b0100 *
b0000 ,
b0000 -
b0010 .
b0101 /
b0110 0
0<
0=
0>
0?
0B
0C
1D
0G
0I
1J
1N
0O
1P
0R
1S
0V
0X
0Y
0\
0b
0c
1d
0e
0h
#8000000
b1010 !
b1110 "
b10001100 #
b1010 $
b1110 %
b10001100 &
b0000 '
b1010 (
b1010 )
b1010 *
b1110 -
b1010 .
b1111 /
b0001 0
01
12
1<
1?
1@
0A
1D
1F
1I
1J
1K
1M
0N
1O
0P
1Q
1R
0S
1U
1V
1W
0X
1]
1`
1e
1h
#10000000
b1011 !
b1011 "
b01111001 #
b1011 $
b1011 %
b01111001 &
b1011 '
b1011 (
b0000 )
b1011 *
b1111 +
b0000 -
b0000 .
b1000 /
b1111 0
13
14
05
16
18
19
0:
0;
0<
0?
0@
0D
1E
0F
1I
0J
0L
0M
1N
1O
0Q
0R
1S
0V
0W
1X
1Y
1Z
1[
1^
1_
0`
0a
0d
0e
1f
0g
1h
#12000000
