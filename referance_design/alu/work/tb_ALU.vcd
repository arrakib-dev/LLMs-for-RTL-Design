$date
  Thu Nov 30 12:53:50 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module std_logic_arith $end
$upscope $end
$scope module std_logic_unsigned $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module tb_alu $end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 4 # alu_sel[3:0] $end
$var reg 8 $ alu_out[7:0] $end
$var reg 1 % carryout $end
$var integer 32 & i $end
$scope module uut $end
$var reg 8 ' a[7:0] $end
$var reg 8 ( b[7:0] $end
$var reg 4 ) alu_sel[3:0] $end
$var reg 8 * alu_out[7:0] $end
$var reg 1 + carryout $end
$var reg 8 , alu_result[7:0] $end
$var reg 9 - tmp[8:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00001010 !
b00000010 "
b0001 #
b00001000 $
0%
b10000000000000000000000000000000 &
b00001010 '
b00000010 (
b0001 )
b00001000 *
0+
b00001000 ,
b000001100 -
#100000000
b0010 #
b00010100 $
b0010 )
b00010100 *
b00010100 ,
#200000000
b0011 #
b00000101 $
b0011 )
b00000101 *
b00000101 ,
#300000000
b0100 #
b00010100 $
b0100 )
b00010100 *
b00010100 ,
#400000000
b0101 #
b00000101 $
b0101 )
b00000101 *
b00000101 ,
#500000000
b0110 #
b00010100 $
b0110 )
b00010100 *
b00010100 ,
#600000000
b0111 #
b00000101 $
b0111 )
b00000101 *
b00000101 ,
#700000000
b1000 #
b00000010 $
b1000 )
b00000010 *
b00000010 ,
#800000000
b1001 #
b00001010 $
b1001 )
b00001010 *
b00001010 ,
#900000000
b1010 #
b00001000 $
b1010 )
b00001000 *
b00001000 ,
#1000000000
b1011 #
b11110101 $
b1011 )
b11110101 *
b11110101 ,
